"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DayOfWeekLimit = void 0;
const gotime_day_1 = require("../enums/gotime_day");
const gotime_parts_1 = require("../enums/gotime_parts");
const gotime_unts_1 = require("../enums/gotime_unts");
const _limit_1 = require("./_limit");
class DayOfWeekLimit extends _limit_1.GoTimeLimit {
    constructor() {
        super(...arguments);
        this.part = gotime_parts_1.GoTimePart.dayOfWeek;
    }
    getCurrentValue(date) {
        const dow = date.getDay();
        return dow === 0 ? 7 : dow; // 1 = Monday, 7 = Sunday
    }
    computeUnit() {
        return gotime_unts_1.GoTimeUnit.day;
    }
    toNumber(n) {
        let result = super.toNumber(n);
        if (!isNaN(result)) {
            if (result < 1 || result > 7)
                throw new Error(`Invalid day of week ${n}`);
        }
        else {
            const asDay = gotime_day_1.GoTimeDays.indexOf(n.slice(0, 3));
            if (asDay >= 0) {
                result = asDay + 1;
            }
            else {
                throw new Error(`Invalid day of week ${n}`);
            }
        }
        return result;
    }
}
exports.DayOfWeekLimit = DayOfWeekLimit;
