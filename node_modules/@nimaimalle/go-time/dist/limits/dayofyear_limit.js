"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DayOfYearLimit = void 0;
const gotime_parts_1 = require("../enums/gotime_parts");
const gotime_unts_1 = require("../enums/gotime_unts");
const _limit_1 = require("./_limit");
class DayOfYearLimit extends _limit_1.GoTimeLimit {
    constructor() {
        super(...arguments);
        this.part = gotime_parts_1.GoTimePart.dayOfYear;
    }
    getCurrentValue(date) {
        const doy = (Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) - Date.UTC(date.getFullYear(), 0, 0)) / 24 / 60 / 60 / 1000;
        return doy;
    }
    computeUnit() {
        return gotime_unts_1.GoTimeUnit.day;
    }
    toNumber(n) {
        const result = super.toNumber(n);
        if (isNaN(result) || result < 0 || result > 365)
            throw new Error(`Invalid day of year ${n}`);
        return result;
    }
}
exports.DayOfYearLimit = DayOfYearLimit;
