"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WeekOfMonthLimit = void 0;
const gotime_parts_1 = require("../enums/gotime_parts");
const gotime_unts_1 = require("../enums/gotime_unts");
const _limit_1 = require("./_limit");
class WeekOfMonthLimit extends _limit_1.GoTimeLimit {
    constructor() {
        super(...arguments);
        this.part = gotime_parts_1.GoTimePart.weekOfMonth;
    }
    getCurrentValue(date) {
        const jan1 = new Date(date.getFullYear(), 0, 1);
        const startWeek = Math.ceil(((date.getTime() - jan1.getTime()) / 86400000 + jan1.getDay() + 1) / 7);
        const firstOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);
        const week = Math.ceil(((date.getTime() - firstOfMonth.getTime()) / 86400000 + firstOfMonth.getDay() + 1) / 7);
        return week - startWeek;
    }
    computeUnit() {
        return gotime_unts_1.GoTimeUnit.week;
    }
    toNumber(n) {
        const result = super.toNumber(n);
        if (isNaN(result) || result < 1 || result > 5)
            throw new Error(`Invalid week of month ${n}`);
        return result;
    }
}
exports.WeekOfMonthLimit = WeekOfMonthLimit;
