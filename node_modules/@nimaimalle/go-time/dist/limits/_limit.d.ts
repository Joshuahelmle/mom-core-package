import { GoTimeOperator } from '../enums/gotime_operator';
import { GoTimePart } from '../enums/gotime_parts';
import { GoTimeUnit } from '../enums/gotime_unts';
import { GoTimeSpan } from '../gotime_span';
export declare abstract class GoTimeLimit {
    abstract readonly part: GoTimePart;
    unit: GoTimeUnit;
    readonly operator: GoTimeOperator;
    readonly values: ReadonlyArray<GoTimeSpan>;
    constructor(op: GoTimeOperator, value: string);
    protected parseValue(value: string): Array<GoTimeSpan>;
    protected abstract computeUnit(): GoTimeUnit;
    protected toNumber(n: string): number;
    protected abstract getCurrentValue(date: Date): number;
    test(date: Date): boolean;
}
export declare function goTimeToNumber(n: string): number | undefined;
